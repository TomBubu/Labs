/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package BankingSoftware;

import java.util.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/**
 *
 * @author ee16ttz
 */
public class BankingGUIFrame extends javax.swing.JFrame {
    /**
     * Creates new form MainJFrame
     */
    public BankingGUIFrame() {
        initComponents();
        
        // Object instantiation
        theHeadOfficeBranch = new ClsBranch();
        theMathematicalOperation = new ClsMathematicalOperation();
        theUser = new ClsUser();
        theCustomer = new ClsCustomer();
        theAddress = new ClsIAddress();
        thePerson = new ClsPerson();
        bankClients = new ClsCustomerList();
        bankBranches = new ClsBranchList();
        
        currentAcc = new ClsCurrentAccount();
        ISAAcc = new ClsISAAccount();
        savingsAcc = new ClsSavingsAccount();
        
        //theHeadOfficeBranch.editBranchAddress("CISCO Systems Head Office", "Bedfont Lakes", 10, "New Square", "Middlesex", "TW14 8HA", "Feltham", "UK");        
        //theHeadOfficeBranch.editBranchDetails("09:00-17:00", "12-34-56");
        thePerson.editPersonAddress("South Bank House", "Black Prince Road", 158, "Underground", "Vauxhall", "SW12 5WQ", "London", "UK");
        
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        Date PersonDOB = new Date();
        Date PersonCS = new Date();
        try {
            PersonDOB = sdf.parse("01/02/1995");
            PersonCS = sdf.parse("01/05/2010");
        } catch (ParseException ex) {
            Logger.getLogger(BankingGUIFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        thePerson.editPersonDetails("John", "Novak", PersonDOB, PersonCS);
        theHeadOfficeBranch.loadFromFile("headBranch.txt");
        
        jTabInMemory_1 = jMainTabbedPanel.getComponentAt(1);
        jTabInMemory_2 = jMainTabbedPanel.getComponentAt(2);
        jTabInMemory_3 = jMainTabbedPanel.getComponentAt(3);
        jTabInMemory_4 = jMainTabbedPanel.getComponentAt(4);
        jTabInMemory_5 = jMainTabbedPanel.getComponentAt(5);
        jTabInMemory_6 = jMainTabbedPanel.getComponentAt(6);
        
        for (int index=0; index < jMainTabbedPanel.getTabCount(); index++){
            // The following if: if the contect is equal to Login, then 
            if(!jMainTabbedPanel.getTitleAt(index).contentEquals("Login")){
               jMainTabbedPanel.setEnabledAt(index,false);
            }
        }
        
        // Index 0 = Login tab, I need the other 6 removed from 6 to 1:
        for (int index=6; index > 0; index--){
            jMainTabbedPanel.remove(index);
        }

    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jStatusPanel = new javax.swing.JPanel();
        jStatusMessageLabel = new javax.swing.JLabel();
        jStatusAnimationLabel = new javax.swing.JLabel();
        jProgressCompletionBar = new javax.swing.JProgressBar();
        jLogOutButton = new javax.swing.JButton();
        jMainPanel = new javax.swing.JPanel();
        jMainTabbedPanel = new javax.swing.JTabbedPane();
        jLoginPanel = new javax.swing.JPanel();
        jNameLabel = new javax.swing.JLabel();
        jNameTextField = new javax.swing.JTextField();
        jPasswordLabel = new javax.swing.JLabel();
        jPasswordField = new javax.swing.JPasswordField();
        jRegisterButton = new javax.swing.JButton();
        jLoginButton = new javax.swing.JButton();
        jRoleLabel = new javax.swing.JLabel();
        jRoleComboBox = new javax.swing.JComboBox<>();
        jCalculatorPanel = new javax.swing.JPanel();
        jInput1Label = new javax.swing.JLabel();
        jInput2Label = new javax.swing.JLabel();
        jInput1Field = new javax.swing.JTextField();
        jInput2Field = new javax.swing.JTextField();
        jOutputLabel = new javax.swing.JLabel();
        jOutputField = new javax.swing.JTextField();
        jButtonPlus = new javax.swing.JButton();
        jButtonMinus = new javax.swing.JButton();
        jButtonMultiply = new javax.swing.JButton();
        jButtonDivide = new javax.swing.JButton();
        jPowerButton = new javax.swing.JButton();
        jRectangularVolumeButton = new javax.swing.JButton();
        jCylinderVolumeButton = new javax.swing.JButton();
        jConeVolumeButton = new javax.swing.JButton();
        jSquareBasedPyramidVolumeButton = new javax.swing.JButton();
        jHeightLabel = new javax.swing.JLabel();
        jHeightField = new javax.swing.JTextField();
        jSphereVolumeButton = new javax.swing.JButton();
        jHeadOfficeAddressPanel = new javax.swing.JPanel();
        jHeadOfficeAddressLabel = new javax.swing.JLabel();
        jHeadOfficeAddressScrollPane = new javax.swing.JScrollPane();
        jHeadOfficeTextArea = new javax.swing.JTextArea();
        jDisplayPersonAddressButton = new javax.swing.JButton();
        jDisplayPersonDetailsButton = new javax.swing.JButton();
        jDisplayBranchAddressButton = new javax.swing.JButton();
        jDisplayBranchDetailsButton = new javax.swing.JButton();
        jEditHeadOfficeAddressPanel = new javax.swing.JPanel();
        jEditHeadOfficeNameLabel = new javax.swing.JLabel();
        jEditHeadOfficeHouseNameLabel = new javax.swing.JLabel();
        jEditHeadOfficeHouseNoLabel = new javax.swing.JLabel();
        jEditHeadOfficeStreetLabel = new javax.swing.JLabel();
        jEditHeadOfficeAreaLabel = new javax.swing.JLabel();
        jEditHeadOfficePostCodeLabel = new javax.swing.JLabel();
        jEditHeadOfficeTownLabel = new javax.swing.JLabel();
        jEditHeadOfficeCountryLabel = new javax.swing.JLabel();
        jEditHeadOfficeNameTextField = new javax.swing.JTextField();
        jEditHeadOfficeHouseNameTextField = new javax.swing.JTextField();
        jEditHeadOfficeHouseNoTextField = new javax.swing.JTextField();
        jEditHeadOfficeStreetTextField = new javax.swing.JTextField();
        jEditHeadOfficeAreaTextField = new javax.swing.JTextField();
        jEditHeadOfficePostCodeTextField = new javax.swing.JTextField();
        jEditHeadOfficeTownTextField = new javax.swing.JTextField();
        jEditHeadOfficeCountryTextField = new javax.swing.JTextField();
        jSaveOfficeDetailsButton = new javax.swing.JButton();
        jEditHeadOfficeWorkingHoursTextField = new javax.swing.JTextField();
        jEditHeadOfficeWorkingHoursLabel = new javax.swing.JLabel();
        jEditHeadOfficeSortCodeLabel = new javax.swing.JLabel();
        jEditHeadOfficeSortCodeTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jBranchesPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jBranchesTextArea = new javax.swing.JTextArea();
        jDisplayBranchesBtn = new javax.swing.JButton();
        jRemoveBranchBtn = new javax.swing.JButton();
        jAddBranchBtn = new javax.swing.JButton();
        jBranchNameTextField = new javax.swing.JTextField();
        jBranchHouseNameTextField = new javax.swing.JTextField();
        jBranchHouseNumberTextField = new javax.swing.JTextField();
        jBranchStreetTextField = new javax.swing.JTextField();
        jBranchAreaTextArea = new javax.swing.JTextField();
        jBranchPostCodeTextField = new javax.swing.JTextField();
        jBranchTownTextField = new javax.swing.JTextField();
        jBranchCountryTextField = new javax.swing.JTextField();
        jBranchWorkingHoursTextField = new javax.swing.JTextField();
        jBranchSortCodeTextField = new javax.swing.JTextField();
        jBranchNameLabel = new javax.swing.JLabel();
        jBranchHouseNameLabel = new javax.swing.JLabel();
        jBranchHouseNumberLabel = new javax.swing.JLabel();
        jBranchStreetLabel = new javax.swing.JLabel();
        jBranchAreaLabel = new javax.swing.JLabel();
        jBranchPostCodeLabel = new javax.swing.JLabel();
        jBranchTownLabel = new javax.swing.JLabel();
        jBranchCountryLabel = new javax.swing.JLabel();
        jBranchWorkingHoursLabel = new javax.swing.JLabel();
        jBranchSortCodeLabel = new javax.swing.JLabel();
        jBranchesSaveToFileBtn = new javax.swing.JButton();
        jBranchesLoadFromFileBtn = new javax.swing.JButton();
        jDisplaySubDeps = new javax.swing.JButton();
        jAddSubdepartment = new javax.swing.JToggleButton();
        jRemoveSubdeptBtn = new javax.swing.JToggleButton();
        jBranchesLabel = new javax.swing.JLabel();
        jClientsPanel = new javax.swing.JPanel();
        jDisplayClientInformationBtn = new javax.swing.JButton();
        jAddClientBtn = new javax.swing.JButton();
        jRemoveClientBtn = new javax.swing.JButton();
        jClientFirstNameLabel = new javax.swing.JLabel();
        jClientFirstNameTextField = new javax.swing.JTextField();
        jClientSurnameLabel = new javax.swing.JLabel();
        jClientSurnameTextField = new javax.swing.JTextField();
        jClientDOBLabel = new javax.swing.JLabel();
        jClientDOBTextField = new javax.swing.JTextField();
        jClientSinceLabel = new javax.swing.JLabel();
        jClientSinceTextField = new javax.swing.JTextField();
        jExportClientstoFileBtn = new javax.swing.JButton();
        jImportClientsfromFileBtn = new javax.swing.JButton();
        jSearchForClientBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jClientsTextArea = new javax.swing.JTextArea();
        jClientHouseNameLabel = new javax.swing.JLabel();
        jClientHouseNumberLabel = new javax.swing.JLabel();
        jClientStreetLabel = new javax.swing.JLabel();
        jClientAreaLabel = new javax.swing.JLabel();
        jClientHouseNameTextField = new javax.swing.JTextField();
        jClientHouseNumberTextField = new javax.swing.JTextField();
        jClientStreetTextField = new javax.swing.JTextField();
        jClientAreaTextField = new javax.swing.JTextField();
        jClientPostCodeLabel = new javax.swing.JLabel();
        jClientPostCodeTextField = new javax.swing.JTextField();
        jClientTownTextField = new javax.swing.JTextField();
        jClientTownLabel = new javax.swing.JLabel();
        jClientCountryTextField = new javax.swing.JTextField();
        jClientCountryLabel = new javax.swing.JLabel();
        jSummarySelectedAccBtn = new javax.swing.JButton();
        jSortCodeLabel = new javax.swing.JLabel();
        jSortCodeTextField = new javax.swing.JTextField();
        jAccountNumberLabel1 = new javax.swing.JLabel();
        jAccountBalanceLabel = new javax.swing.JLabel();
        jBankNameLabel = new javax.swing.JLabel();
        jBankNameTextField = new javax.swing.JTextField();
        jNumberTextField = new javax.swing.JTextField();
        jAccountTypeLabel = new javax.swing.JLabel();
        jAccountTypeComboBox = new javax.swing.JComboBox<>();
        jOpenNewAccountBtn = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        AccountListModel = new DefaultListModel();
        jClientAccountsList = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jAccountConditionsTextArea = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jBalanceLabel = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jAccountsTextArea = new javax.swing.JTextArea();
        jTransactionsPanel = new javax.swing.JPanel();
        jTransactionsFirstNameLabel = new javax.swing.JLabel();
        jTransactionsSurnameLabel = new javax.swing.JLabel();
        jTransactionsDOBLabel = new javax.swing.JLabel();
        jTransactionsDOBTextField = new javax.swing.JTextField();
        jTransactionsSurnameTextField = new javax.swing.JTextField();
        jTransactionsFirstNameTextField = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jTransactionsAccNumberLabel = new javax.swing.JLabel();
        jTransactionsSortCodeLabel = new javax.swing.JLabel();
        jTransactionsDepositAmountLabel = new javax.swing.JLabel();
        jTransactionsAccNumberTextField = new javax.swing.JTextField();
        jTransactionsSortCodeTextField = new javax.swing.JTextField();
        jTransactionsAmountTextField = new javax.swing.JTextField();
        jApproveTransactionBtn = new javax.swing.JButton();
        jGenerateStatementBtn = new javax.swing.JButton();
        jDepositBtn = new javax.swing.JButton();
        jWithdrawBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTransactionTextArea = new javax.swing.JTextArea();
        jMenuBarMain = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jStatusPanel.setBackground(new java.awt.Color(102, 204, 255));
        jStatusPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jStatusPanel.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N

        jStatusMessageLabel.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jStatusMessageLabel.setText("Banking software is running.");

        jStatusAnimationLabel.setText("Currently no user is logged in.");

        jLogOutButton.setText("Log Out");
        jLogOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLogOutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jStatusPanelLayout = new javax.swing.GroupLayout(jStatusPanel);
        jStatusPanel.setLayout(jStatusPanelLayout);
        jStatusPanelLayout.setHorizontalGroup(
            jStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jStatusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jStatusPanelLayout.createSequentialGroup()
                        .addComponent(jProgressCompletionBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jStatusPanelLayout.createSequentialGroup()
                        .addComponent(jStatusAnimationLabel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jStatusPanelLayout.createSequentialGroup()
                        .addComponent(jStatusMessageLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLogOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51))))
        );
        jStatusPanelLayout.setVerticalGroup(
            jStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jStatusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jStatusMessageLabel)
                    .addGroup(jStatusPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLogOutButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jStatusAnimationLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jProgressCompletionBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jNameLabel.setText("What is your name?");

        jNameTextField.setMinimumSize(new java.awt.Dimension(6, 25));

        jPasswordLabel.setText("And your password is?");

        jPasswordField.setMinimumSize(new java.awt.Dimension(6, 25));

        jRegisterButton.setBackground(new java.awt.Color(102, 204, 255));
        jRegisterButton.setText("Register");
        jRegisterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRegisterButtonActionPerformed(evt);
            }
        });

        jLoginButton.setBackground(new java.awt.Color(102, 204, 255));
        jLoginButton.setText("Login");
        jLoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLoginButtonActionPerformed(evt);
            }
        });

        jRoleLabel.setText("What is your role in the company?");

        jRoleComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Manager", "Administrator", "Customer", "Advisor" })
        );
        jRoleComboBox.setPreferredSize(new java.awt.Dimension(120, 25));

        javax.swing.GroupLayout jLoginPanelLayout = new javax.swing.GroupLayout(jLoginPanel);
        jLoginPanel.setLayout(jLoginPanelLayout);
        jLoginPanelLayout.setHorizontalGroup(
            jLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLoginPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLoginPanelLayout.createSequentialGroup()
                        .addGroup(jLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(63, 63, 63)
                        .addGroup(jLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPasswordLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                            .addComponent(jPasswordField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jRoleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRoleLabel))
                .addGap(45, 45, 45)
                .addGroup(jLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRegisterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLoginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 629, Short.MAX_VALUE))
        );
        jLoginPanelLayout.setVerticalGroup(
            jLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLoginPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPasswordLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLoginButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLoginPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jRoleLabel)
                        .addGap(3, 3, 3)
                        .addComponent(jRoleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jLoginPanelLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jRegisterButton)))
                .addContainerGap(294, Short.MAX_VALUE))
        );

        jRoleComboBox.setSelectedIndex(0);
        jRoleComboBox.addActionListener(jRoleComboBox);

        jMainTabbedPanel.addTab("Login", jLoginPanel);

        jInput1Label.setText("Input 1");

        jInput2Label.setText("Input 2");

        jInput1Field.setText("0.0");

        jInput2Field.setText("0.0");

        jOutputLabel.setText("Output");

        jOutputField.setText("0.0");

        jButtonPlus.setText("+");
        jButtonPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPlusActionPerformed(evt);
            }
        });

        jButtonMinus.setText("-");
        jButtonMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMinusActionPerformed(evt);
            }
        });

        jButtonMultiply.setText("*");
        jButtonMultiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMultiplyActionPerformed(evt);
            }
        });

        jButtonDivide.setText("/");
        jButtonDivide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDivideActionPerformed(evt);
            }
        });

        jPowerButton.setText("Power ^");
        jPowerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPowerButtonActionPerformed(evt);
            }
        });

        jRectangularVolumeButton.setText("Rectangular Volume");
        jRectangularVolumeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRectangularVolumeButtonActionPerformed(evt);
            }
        });

        jCylinderVolumeButton.setText("Cylinder Volume");
        jCylinderVolumeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCylinderVolumeButtonActionPerformed(evt);
            }
        });

        jConeVolumeButton.setText("Cone Volume");
        jConeVolumeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jConeVolumeButtonActionPerformed(evt);
            }
        });

        jSquareBasedPyramidVolumeButton.setText("Square Based Pyramid Volume");
        jSquareBasedPyramidVolumeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSquareBasedPyramidVolumeButtonActionPerformed(evt);
            }
        });

        jHeightLabel.setText("Input 3");

        jHeightField.setText("0.0");

        jSphereVolumeButton.setText("Sphere");
        jSphereVolumeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSphereVolumeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jCalculatorPanelLayout = new javax.swing.GroupLayout(jCalculatorPanel);
        jCalculatorPanel.setLayout(jCalculatorPanelLayout);
        jCalculatorPanelLayout.setHorizontalGroup(
            jCalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jCalculatorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jCalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jCalculatorPanelLayout.createSequentialGroup()
                        .addGroup(jCalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jCalculatorPanelLayout.createSequentialGroup()
                                .addComponent(jHeightLabel)
                                .addGap(18, 18, 18)
                                .addComponent(jHeightField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jCalculatorPanelLayout.createSequentialGroup()
                                .addComponent(jInput1Label)
                                .addGap(18, 18, 18)
                                .addComponent(jInput1Field, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jCalculatorPanelLayout.createSequentialGroup()
                                .addComponent(jInput2Label)
                                .addGap(18, 18, 18)
                                .addComponent(jInput2Field, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jCalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jCalculatorPanelLayout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(jOutputLabel))
                            .addGroup(jCalculatorPanelLayout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addComponent(jButtonPlus)))
                        .addGroup(jCalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jCalculatorPanelLayout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(jOutputField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jCalculatorPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonMinus)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonMultiply)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonDivide))))
                    .addGroup(jCalculatorPanelLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(jCalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSphereVolumeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPowerButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jCalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jCalculatorPanelLayout.createSequentialGroup()
                                .addComponent(jRectangularVolumeButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCylinderVolumeButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jConeVolumeButton))
                            .addComponent(jSquareBasedPyramidVolumeButton))))
                .addGap(19, 632, Short.MAX_VALUE))
        );
        jCalculatorPanelLayout.setVerticalGroup(
            jCalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jCalculatorPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jCalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jInput1Label)
                    .addComponent(jInput1Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jOutputLabel)
                    .addComponent(jOutputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jCalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jInput2Label)
                    .addComponent(jInput2Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jCalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jHeightLabel)
                    .addComponent(jHeightField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPlus)
                    .addComponent(jButtonMinus)
                    .addComponent(jButtonMultiply)
                    .addComponent(jButtonDivide))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jCalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPowerButton)
                    .addComponent(jRectangularVolumeButton)
                    .addComponent(jCylinderVolumeButton)
                    .addComponent(jConeVolumeButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jCalculatorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSquareBasedPyramidVolumeButton)
                    .addComponent(jSphereVolumeButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMainTabbedPanel.addTab("Calculator", jCalculatorPanel);

        jHeadOfficeAddressLabel.setText("Head Office Address and manager");

        jHeadOfficeTextArea.setColumns(20);
        jHeadOfficeTextArea.setRows(5);
        jHeadOfficeTextArea.setText("No address.");
        jHeadOfficeAddressScrollPane.setViewportView(jHeadOfficeTextArea);

        jDisplayPersonAddressButton.setText("Display Person Address");
        jDisplayPersonAddressButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDisplayPersonAddressButtonActionPerformed(evt);
            }
        });

        jDisplayPersonDetailsButton.setText("Display Person Details");
        jDisplayPersonDetailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDisplayPersonDetailsButtonActionPerformed(evt);
            }
        });

        jDisplayBranchAddressButton.setText("Display Branch Address");
        jDisplayBranchAddressButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDisplayBranchAddressButtonActionPerformed(evt);
            }
        });

        jDisplayBranchDetailsButton.setText("Display Branch Details");
        jDisplayBranchDetailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDisplayBranchDetailsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jHeadOfficeAddressPanelLayout = new javax.swing.GroupLayout(jHeadOfficeAddressPanel);
        jHeadOfficeAddressPanel.setLayout(jHeadOfficeAddressPanelLayout);
        jHeadOfficeAddressPanelLayout.setHorizontalGroup(
            jHeadOfficeAddressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jHeadOfficeAddressPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jHeadOfficeAddressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jHeadOfficeAddressPanelLayout.createSequentialGroup()
                        .addComponent(jHeadOfficeAddressScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jHeadOfficeAddressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jDisplayBranchAddressButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jDisplayPersonDetailsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jDisplayPersonAddressButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jDisplayBranchDetailsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jHeadOfficeAddressLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jHeadOfficeAddressPanelLayout.setVerticalGroup(
            jHeadOfficeAddressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jHeadOfficeAddressPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jHeadOfficeAddressLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jHeadOfficeAddressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jHeadOfficeAddressPanelLayout.createSequentialGroup()
                        .addComponent(jDisplayPersonAddressButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDisplayPersonDetailsButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDisplayBranchAddressButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDisplayBranchDetailsButton))
                    .addComponent(jHeadOfficeAddressScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(273, Short.MAX_VALUE))
        );

        jMainTabbedPanel.addTab("Head Office Address", jHeadOfficeAddressPanel);

        jEditHeadOfficeNameLabel.setText("Name");

        jEditHeadOfficeHouseNameLabel.setText("House name");

        jEditHeadOfficeHouseNoLabel.setText("House number");

        jEditHeadOfficeStreetLabel.setText("Street");

        jEditHeadOfficeAreaLabel.setText("Area");

        jEditHeadOfficePostCodeLabel.setText("Post Code");

        jEditHeadOfficeTownLabel.setText("Town");

        jEditHeadOfficeCountryLabel.setText("Country");

        jEditHeadOfficeNameTextField.setMinimumSize(new java.awt.Dimension(10, 20));
        jEditHeadOfficeNameTextField.setPreferredSize(new java.awt.Dimension(100, 25));

        jEditHeadOfficeHouseNameTextField.setMinimumSize(new java.awt.Dimension(10, 20));
        jEditHeadOfficeHouseNameTextField.setPreferredSize(new java.awt.Dimension(100, 25));

        jEditHeadOfficeHouseNoTextField.setText("0");
        jEditHeadOfficeHouseNoTextField.setMinimumSize(new java.awt.Dimension(10, 20));
        jEditHeadOfficeHouseNoTextField.setPreferredSize(new java.awt.Dimension(100, 25));

        jEditHeadOfficeStreetTextField.setMinimumSize(new java.awt.Dimension(10, 20));
        jEditHeadOfficeStreetTextField.setPreferredSize(new java.awt.Dimension(100, 25));

        jEditHeadOfficeAreaTextField.setMinimumSize(new java.awt.Dimension(10, 20));
        jEditHeadOfficeAreaTextField.setPreferredSize(new java.awt.Dimension(100, 25));

        jEditHeadOfficePostCodeTextField.setMinimumSize(new java.awt.Dimension(10, 20));
        jEditHeadOfficePostCodeTextField.setPreferredSize(new java.awt.Dimension(100, 25));

        jEditHeadOfficeTownTextField.setMinimumSize(new java.awt.Dimension(10, 20));
        jEditHeadOfficeTownTextField.setPreferredSize(new java.awt.Dimension(100, 25));

        jEditHeadOfficeCountryTextField.setMinimumSize(new java.awt.Dimension(10, 20));
        jEditHeadOfficeCountryTextField.setPreferredSize(new java.awt.Dimension(100, 25));

        jSaveOfficeDetailsButton.setText("Save");
        jSaveOfficeDetailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSaveOfficeDetailsButtonActionPerformed(evt);
            }
        });

        jEditHeadOfficeWorkingHoursTextField.setMinimumSize(new java.awt.Dimension(10, 20));
        jEditHeadOfficeWorkingHoursTextField.setPreferredSize(new java.awt.Dimension(100, 25));

        jEditHeadOfficeWorkingHoursLabel.setText("Working Hours");

        jEditHeadOfficeSortCodeLabel.setText("Sort Code");

        jLabel4.setText("Edit Head office address and details");

        javax.swing.GroupLayout jEditHeadOfficeAddressPanelLayout = new javax.swing.GroupLayout(jEditHeadOfficeAddressPanel);
        jEditHeadOfficeAddressPanel.setLayout(jEditHeadOfficeAddressPanelLayout);
        jEditHeadOfficeAddressPanelLayout.setHorizontalGroup(
            jEditHeadOfficeAddressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jEditHeadOfficeAddressPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jEditHeadOfficeAddressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(jEditHeadOfficeAddressPanelLayout.createSequentialGroup()
                        .addComponent(jEditHeadOfficeSortCodeLabel)
                        .addGap(118, 118, 118)
                        .addComponent(jEditHeadOfficeSortCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jEditHeadOfficeAddressPanelLayout.createSequentialGroup()
                        .addGroup(jEditHeadOfficeAddressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jEditHeadOfficeAddressPanelLayout.createSequentialGroup()
                                .addComponent(jEditHeadOfficeWorkingHoursLabel)
                                .addGap(96, 96, 96)
                                .addComponent(jEditHeadOfficeWorkingHoursTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jEditHeadOfficeAddressPanelLayout.createSequentialGroup()
                                .addGroup(jEditHeadOfficeAddressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jEditHeadOfficeTownLabel)
                                    .addComponent(jEditHeadOfficePostCodeLabel)
                                    .addComponent(jEditHeadOfficeAreaLabel)
                                    .addComponent(jEditHeadOfficeStreetLabel)
                                    .addComponent(jEditHeadOfficeHouseNoLabel)
                                    .addComponent(jEditHeadOfficeHouseNameLabel)
                                    .addComponent(jEditHeadOfficeNameLabel)
                                    .addComponent(jEditHeadOfficeCountryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(96, 96, 96)
                                .addGroup(jEditHeadOfficeAddressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jEditHeadOfficeAreaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jEditHeadOfficePostCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jEditHeadOfficeNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jEditHeadOfficeStreetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jEditHeadOfficeHouseNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jEditHeadOfficeHouseNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jEditHeadOfficeTownTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jEditHeadOfficeCountryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addComponent(jSaveOfficeDetailsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(677, Short.MAX_VALUE))
        );
        jEditHeadOfficeAddressPanelLayout.setVerticalGroup(
            jEditHeadOfficeAddressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jEditHeadOfficeAddressPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jEditHeadOfficeAddressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSaveOfficeDetailsButton)
                    .addGroup(jEditHeadOfficeAddressPanelLayout.createSequentialGroup()
                        .addGroup(jEditHeadOfficeAddressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jEditHeadOfficeNameLabel)
                            .addComponent(jEditHeadOfficeNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(jEditHeadOfficeAddressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jEditHeadOfficeHouseNameLabel)
                            .addComponent(jEditHeadOfficeHouseNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jEditHeadOfficeAddressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jEditHeadOfficeHouseNoLabel)
                            .addComponent(jEditHeadOfficeHouseNoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jEditHeadOfficeAddressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jEditHeadOfficeStreetLabel)
                            .addComponent(jEditHeadOfficeStreetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jEditHeadOfficeAddressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jEditHeadOfficeAreaLabel)
                            .addComponent(jEditHeadOfficeAreaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jEditHeadOfficeAddressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jEditHeadOfficePostCodeLabel)
                            .addComponent(jEditHeadOfficePostCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jEditHeadOfficeAddressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jEditHeadOfficeTownLabel)
                            .addComponent(jEditHeadOfficeTownTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jEditHeadOfficeAddressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jEditHeadOfficeCountryLabel)
                            .addComponent(jEditHeadOfficeCountryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jEditHeadOfficeAddressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEditHeadOfficeSortCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEditHeadOfficeSortCodeLabel))
                .addGap(10, 10, 10)
                .addGroup(jEditHeadOfficeAddressPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEditHeadOfficeWorkingHoursTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEditHeadOfficeWorkingHoursLabel))
                .addContainerGap())
        );

        jMainTabbedPanel.addTab("Edit Head Office Details", jEditHeadOfficeAddressPanel);

        jBranchesTextArea.setColumns(20);
        jBranchesTextArea.setRows(5);
        jScrollPane3.setViewportView(jBranchesTextArea);

        jDisplayBranchesBtn.setText("Display Branches");
        jDisplayBranchesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDisplayBranchesBtnActionPerformed(evt);
            }
        });

        jRemoveBranchBtn.setText("Remove Branch");
        jRemoveBranchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRemoveBranchBtnActionPerformed(evt);
            }
        });

        jAddBranchBtn.setText("Add Branch");
        jAddBranchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddBranchBtnActionPerformed(evt);
            }
        });

        jBranchHouseNumberTextField.setText("0");

        jBranchNameLabel.setText("Branch/Subdepartment Name");

        jBranchHouseNameLabel.setText("House Name");

        jBranchHouseNumberLabel.setText("House Number");

        jBranchStreetLabel.setText("Street");

        jBranchAreaLabel.setText("Area");

        jBranchPostCodeLabel.setText("Post Code");

        jBranchTownLabel.setText("Town");

        jBranchCountryLabel.setText("Country");

        jBranchWorkingHoursLabel.setText("Working Hours");

        jBranchSortCodeLabel.setText("Sort Code");

        jBranchesSaveToFileBtn.setText("Save to File");
        jBranchesSaveToFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBranchesSaveToFileBtnActionPerformed(evt);
            }
        });

        jBranchesLoadFromFileBtn.setText("Load from File");
        jBranchesLoadFromFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBranchesLoadFromFileBtnActionPerformed(evt);
            }
        });

        jDisplaySubDeps.setText("Display SubDepartments");
        jDisplaySubDeps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDisplaySubDepsActionPerformed(evt);
            }
        });

        jAddSubdepartment.setText("Add Subdepartment");
        jAddSubdepartment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddSubdepartmentActionPerformed(evt);
            }
        });

        jRemoveSubdeptBtn.setText("Remove Subdepartment");
        jRemoveSubdeptBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRemoveSubdeptBtnActionPerformed(evt);
            }
        });

        jBranchesLabel.setText("Branches and sub-departments");

        javax.swing.GroupLayout jBranchesPanelLayout = new javax.swing.GroupLayout(jBranchesPanel);
        jBranchesPanel.setLayout(jBranchesPanelLayout);
        jBranchesPanelLayout.setHorizontalGroup(
            jBranchesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jBranchesPanelLayout.createSequentialGroup()
                .addGroup(jBranchesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jBranchesPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jBranchesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jBranchesPanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jBranchesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jBranchesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jBranchesPanelLayout.createSequentialGroup()
                                    .addComponent(jDisplayBranchesBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jDisplaySubDeps, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(jBranchesPanelLayout.createSequentialGroup()
                                    .addGroup(jBranchesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jAddBranchBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jBranchesSaveToFileBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jBranchesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jRemoveBranchBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jBranchesLoadFromFileBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGap(18, 18, 18)
                                    .addGroup(jBranchesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jAddSubdepartment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jRemoveSubdeptBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jBranchesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBranchWorkingHoursLabel)
                    .addComponent(jBranchNameLabel)
                    .addComponent(jBranchHouseNameLabel)
                    .addComponent(jBranchHouseNumberLabel)
                    .addComponent(jBranchStreetLabel)
                    .addComponent(jBranchAreaLabel)
                    .addComponent(jBranchPostCodeLabel)
                    .addComponent(jBranchTownLabel)
                    .addComponent(jBranchCountryLabel)
                    .addComponent(jBranchSortCodeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 175, Short.MAX_VALUE)
                .addGroup(jBranchesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jBranchCountryTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBranchWorkingHoursTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBranchTownTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBranchPostCodeTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBranchAreaTextArea, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBranchStreetTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBranchHouseNameTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBranchNameTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBranchHouseNumberTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(jBranchSortCodeTextField))
                .addGap(192, 192, 192))
        );
        jBranchesPanelLayout.setVerticalGroup(
            jBranchesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jBranchesPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jBranchesLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jBranchesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jBranchesPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jBranchesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jDisplayBranchesBtn)
                            .addComponent(jDisplaySubDeps))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jBranchesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jAddBranchBtn)
                            .addComponent(jRemoveBranchBtn)
                            .addComponent(jAddSubdepartment)))
                    .addGroup(jBranchesPanelLayout.createSequentialGroup()
                        .addGroup(jBranchesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBranchNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBranchNameLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jBranchesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBranchHouseNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBranchHouseNameLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jBranchesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBranchHouseNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBranchHouseNumberLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jBranchesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBranchStreetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBranchStreetLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jBranchesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBranchAreaTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBranchAreaLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jBranchesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBranchPostCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBranchPostCodeLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jBranchesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBranchTownTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBranchTownLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jBranchesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBranchCountryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBranchCountryLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jBranchesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBranchSortCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBranchSortCodeLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jBranchesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBranchWorkingHoursTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBranchWorkingHoursLabel))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jBranchesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBranchesSaveToFileBtn)
                    .addComponent(jBranchesLoadFromFileBtn)
                    .addComponent(jRemoveSubdeptBtn))
                .addContainerGap(88, Short.MAX_VALUE))
        );

        jMainTabbedPanel.addTab("Branches", jBranchesPanel);

        jDisplayClientInformationBtn.setText("Display all clients");
        jDisplayClientInformationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDisplayClientInformationBtnActionPerformed(evt);
            }
        });

        jAddClientBtn.setText("Add Client");
        jAddClientBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddClientBtnActionPerformed(evt);
            }
        });

        jRemoveClientBtn.setText("Remove Client");
        jRemoveClientBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRemoveClientBtnActionPerformed(evt);
            }
        });

        jClientFirstNameLabel.setText("First Name");

        jClientSurnameLabel.setText("Surname");

        jClientDOBLabel.setText("Date of Birth");

        jClientSinceLabel.setText("Client Since");

        jExportClientstoFileBtn.setText("Export Clients to File");
        jExportClientstoFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jExportClientstoFileBtnActionPerformed(evt);
            }
        });

        jImportClientsfromFileBtn.setText("Import Clients from File");
        jImportClientsfromFileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jImportClientsfromFileBtnActionPerformed(evt);
            }
        });

        jSearchForClientBtn.setText("Search and select a client");
        jSearchForClientBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSearchForClientBtnActionPerformed(evt);
            }
        });

        jClientsTextArea.setColumns(20);
        jClientsTextArea.setRows(5);
        jScrollPane1.setViewportView(jClientsTextArea);

        jClientHouseNameLabel.setText("House Name");

        jClientHouseNumberLabel.setText("House Number");

        jClientStreetLabel.setText("Street");

        jClientAreaLabel.setText("Area");

        jClientHouseNumberTextField.setText("0");

        jClientPostCodeLabel.setText("Post Code");

        jClientTownLabel.setText("Town");

        jClientCountryLabel.setText("Country");

        jSummarySelectedAccBtn.setText("Show summary for selected account");
        jSummarySelectedAccBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSummarySelectedAccBtnActionPerformed(evt);
            }
        });

        jSortCodeLabel.setText("Sort code");

        jSortCodeTextField.setText("0");

        jAccountNumberLabel1.setText("Account Number");

        jAccountBalanceLabel.setText("Account Balance");

        jBankNameLabel.setText("Bank Name");

        jNumberTextField.setText("0");

        jAccountTypeLabel.setText("Account type");

        jAccountTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please select", "Current Account", "ISA Account", "Saving Account" }));

        jOpenNewAccountBtn.setText("Open new account for selected client");
        jOpenNewAccountBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOpenNewAccountBtnActionPerformed(evt);
            }
        });

        jClientAccountsList.setModel(AccountListModel);
        jScrollPane4.setViewportView(jClientAccountsList);

        jLabel1.setText("Opened accounts for selected client");

        jLabel2.setText("Clients ");

        jLabel3.setText("Summary for selected account");

        jAccountConditionsTextArea.setColumns(20);
        jAccountConditionsTextArea.setLineWrap(true);
        jAccountConditionsTextArea.setRows(5);
        jScrollPane5.setViewportView(jAccountConditionsTextArea);

        jLabel5.setText("Conditions");

        jBalanceLabel.setText("0");

        jAccountsTextArea.setColumns(20);
        jAccountsTextArea.setRows(5);
        jScrollPane7.setViewportView(jAccountsTextArea);

        javax.swing.GroupLayout jClientsPanelLayout = new javax.swing.GroupLayout(jClientsPanel);
        jClientsPanel.setLayout(jClientsPanelLayout);
        jClientsPanelLayout.setHorizontalGroup(
            jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jClientsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jClientsPanelLayout.createSequentialGroup()
                        .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jClientsPanelLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jClientsPanelLayout.createSequentialGroup()
                                        .addComponent(jClientDOBTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jClientStreetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jClientsPanelLayout.createSequentialGroup()
                                        .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jClientSinceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jClientSinceLabel)
                                            .addComponent(jClientDOBLabel))
                                        .addGap(18, 18, 18)
                                        .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jClientStreetLabel)
                                            .addGroup(jClientsPanelLayout.createSequentialGroup()
                                                .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jClientAreaLabel)
                                                    .addComponent(jClientAreaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jClientCountryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jClientCountryLabel)))))
                                    .addGroup(jClientsPanelLayout.createSequentialGroup()
                                        .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jClientsPanelLayout.createSequentialGroup()
                                                .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jClientFirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jClientFirstNameLabel))
                                                .addGap(18, 18, 18)
                                                .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jClientHouseNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jClientHouseNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(jClientsPanelLayout.createSequentialGroup()
                                                .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jClientSurnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jClientSurnameLabel))
                                                .addGap(18, 18, 18)
                                                .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jClientHouseNumberLabel)
                                                    .addComponent(jClientHouseNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(18, 18, 18)
                                        .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jClientTownLabel)
                                            .addComponent(jClientPostCodeLabel)
                                            .addComponent(jClientPostCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jClientTownTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(18, 18, 18)
                                .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jBankNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                    .addComponent(jBankNameLabel)
                                    .addComponent(jNumberTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                    .addComponent(jSortCodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSortCodeTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                    .addComponent(jAccountNumberLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                    .addComponent(jAccountBalanceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                    .addComponent(jBalanceLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jClientsPanelLayout.createSequentialGroup()
                                .addGap(350, 350, 350)
                                .addComponent(jLabel5))))
                    .addGroup(jClientsPanelLayout.createSequentialGroup()
                        .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jClientsPanelLayout.createSequentialGroup()
                                .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jDisplayClientInformationBtn)
                                    .addComponent(jAddClientBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jExportClientstoFileBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jImportClientsfromFileBtn))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jOpenNewAccountBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSearchForClientBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jClientsPanelLayout.createSequentialGroup()
                                .addComponent(jRemoveClientBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jSummarySelectedAccBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10)
                        .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jClientsPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jAccountTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jAccountTypeLabel))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        jClientsPanelLayout.setVerticalGroup(
            jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jClientsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jClientsPanelLayout.createSequentialGroup()
                        .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jClientsPanelLayout.createSequentialGroup()
                                .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jClientFirstNameLabel)
                                    .addComponent(jClientHouseNameLabel)
                                    .addComponent(jClientPostCodeLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jClientFirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jClientHouseNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jClientPostCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jClientSurnameLabel)
                                    .addComponent(jClientHouseNumberLabel)
                                    .addComponent(jClientTownLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jClientSurnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jClientHouseNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jClientTownTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jClientsPanelLayout.createSequentialGroup()
                                        .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jClientDOBLabel)
                                            .addComponent(jClientStreetLabel))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jClientDOBTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jClientStreetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jBalanceLabel))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jClientSinceLabel)
                                            .addComponent(jClientAreaLabel))
                                        .addGap(2, 2, 2)
                                        .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jClientSinceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jClientAreaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jClientsPanelLayout.createSequentialGroup()
                                        .addComponent(jClientCountryLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jClientCountryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jClientsPanelLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jClientsPanelLayout.createSequentialGroup()
                                .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jClientsPanelLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jSortCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jAccountNumberLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jAccountBalanceLabel)
                                        .addGap(37, 37, 37)
                                        .addComponent(jBankNameLabel))
                                    .addComponent(jSortCodeLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBankNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jDisplayClientInformationBtn)
                            .addComponent(jImportClientsfromFileBtn)
                            .addComponent(jSearchForClientBtn))
                        .addGap(18, 18, 18)
                        .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jExportClientstoFileBtn)
                            .addComponent(jAddClientBtn)
                            .addComponent(jOpenNewAccountBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jClientsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSummarySelectedAccBtn)
                            .addComponent(jRemoveClientBtn)))
                    .addGroup(jClientsPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane7))
                    .addGroup(jClientsPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(2, 2, 2)
                .addComponent(jAccountTypeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jAccountTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        jMainTabbedPanel.addTab("Clients", jClientsPanel);

        jTransactionsFirstNameLabel.setText("First name");

        jTransactionsSurnameLabel.setText("Surname");

        jTransactionsDOBLabel.setText("Date of birth");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jTransactionsAccNumberLabel.setText("Account number");

        jTransactionsSortCodeLabel.setText("Sort code");

        jTransactionsDepositAmountLabel.setText("Amount");

        jTransactionsAccNumberTextField.setText("0");

        jTransactionsAmountTextField.setText("0");

        jApproveTransactionBtn.setText("Approve transaction");

        jGenerateStatementBtn.setText("Generate statement");
        jGenerateStatementBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jGenerateStatementBtnActionPerformed(evt);
            }
        });

        jDepositBtn.setText("Deposit");
        jDepositBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDepositBtnActionPerformed(evt);
            }
        });

        jWithdrawBtn.setText("Withdraw");
        jWithdrawBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jWithdrawBtnActionPerformed(evt);
            }
        });

        jTransactionTextArea.setColumns(20);
        jTransactionTextArea.setRows(5);
        jScrollPane2.setViewportView(jTransactionTextArea);

        javax.swing.GroupLayout jTransactionsPanelLayout = new javax.swing.GroupLayout(jTransactionsPanel);
        jTransactionsPanel.setLayout(jTransactionsPanelLayout);
        jTransactionsPanelLayout.setHorizontalGroup(
            jTransactionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jTransactionsPanelLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jTransactionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jTransactionsPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addGap(393, 393, 393))
                    .addGroup(jTransactionsPanelLayout.createSequentialGroup()
                        .addGroup(jTransactionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTransactionsFirstNameLabel)
                            .addComponent(jTransactionsSurnameLabel)
                            .addComponent(jTransactionsDOBLabel)
                            .addComponent(jTransactionsAccNumberLabel)
                            .addComponent(jTransactionsSortCodeLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 324, Short.MAX_VALUE)
                        .addGroup(jTransactionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTransactionsSortCodeTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(jTransactionsAccNumberTextField)
                            .addComponent(jTransactionsDOBTextField)
                            .addComponent(jTransactionsSurnameTextField)
                            .addComponent(jTransactionsFirstNameTextField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jTransactionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jTransactionsPanelLayout.createSequentialGroup()
                                .addComponent(jTransactionsDepositAmountLabel)
                                .addGap(34, 34, 34)
                                .addComponent(jTransactionsAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jApproveTransactionBtn)
                            .addGroup(jTransactionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jWithdrawBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jDepositBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jGenerateStatementBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(366, 366, 366))))
        );
        jTransactionsPanelLayout.setVerticalGroup(
            jTransactionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jTransactionsPanelLayout.createSequentialGroup()
                .addGroup(jTransactionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jTransactionsPanelLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jTransactionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTransactionsFirstNameLabel)
                            .addComponent(jTransactionsFirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jTransactionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTransactionsSurnameLabel)
                            .addComponent(jTransactionsSurnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jTransactionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTransactionsDOBLabel)
                            .addComponent(jTransactionsDOBTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jTransactionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTransactionsSortCodeLabel)
                            .addComponent(jTransactionsSortCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jTransactionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTransactionsAccNumberLabel)
                            .addComponent(jTransactionsAccNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jTransactionsPanelLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jTransactionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jTransactionsPanelLayout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addGroup(jTransactionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTransactionsAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTransactionsDepositAmountLabel))
                                .addGap(56, 56, 56)
                                .addComponent(jApproveTransactionBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jGenerateStatementBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jDepositBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jWithdrawBtn)
                                .addGap(6, 6, 6))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(5, 5, 5)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jMainTabbedPanel.addTab("Transactions", jTransactionsPanel);

        javax.swing.GroupLayout jMainPanelLayout = new javax.swing.GroupLayout(jMainPanel);
        jMainPanel.setLayout(jMainPanelLayout);
        jMainPanelLayout.setHorizontalGroup(
            jMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jMainPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jMainTabbedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );
        jMainPanelLayout.setVerticalGroup(
            jMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jMainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jMainTabbedPanel))
        );

        jMenuBarMain.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jMenuBarMain.setForeground(new java.awt.Color(51, 153, 255));

        jMenu1.setText("File");
        jMenuBarMain.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBarMain.add(jMenu2);

        setJMenuBar(jMenuBarMain);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jStatusPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jStatusPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //done
    private void jDisplayBranchDetailsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDisplayBranchDetailsButtonActionPerformed
        jHeadOfficeTextArea.setText("");
        theHeadOfficeBranch.displayBranchDetails(jHeadOfficeTextArea);
    }//GEN-LAST:event_jDisplayBranchDetailsButtonActionPerformed
    //done
    private void jDisplayBranchAddressButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDisplayBranchAddressButtonActionPerformed
        jHeadOfficeTextArea.setText("");
        theHeadOfficeBranch.displayBranchAddress(jHeadOfficeTextArea);
    }//GEN-LAST:event_jDisplayBranchAddressButtonActionPerformed
    //done
    private void jDisplayPersonDetailsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDisplayPersonDetailsButtonActionPerformed
        jHeadOfficeTextArea.setText("");
        thePerson.displayPersonDetails(jHeadOfficeTextArea);
    }//GEN-LAST:event_jDisplayPersonDetailsButtonActionPerformed
    //done
    private void jDisplayPersonAddressButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDisplayPersonAddressButtonActionPerformed
        //theHeadOfficeBranch.EditAddress("CISCO Systems Head Office", "Bedfont Lakes", 10, "New Square", "Middlesex", "TW14 8HA", "Feltham", "UK", "9:00-17:00");
        jHeadOfficeTextArea.setText("");
        thePerson.displayPersonAddress(jHeadOfficeTextArea);
        //theCustomerHeadOffice.displayCustomerDetails(jHeadOfficeTextArea);
    }//GEN-LAST:event_jDisplayPersonAddressButtonActionPerformed
    //done
    private void jSphereVolumeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSphereVolumeButtonActionPerformed
        // volume = 4/3 * Pi * r^3
        double input1 = Double.valueOf( jInput1Field.getText() );   //area of the base - use input1
        double output = theMathematicalOperation.SphereVolume(input1, 3);
        jOutputField.setText(String.valueOf(output));
    }//GEN-LAST:event_jSphereVolumeButtonActionPerformed
    //done
    private void jSquareBasedPyramidVolumeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSquareBasedPyramidVolumeButtonActionPerformed
        // volume = 1/3 * b * h , where h = height and b = area of the base.
        double input1 = Double.valueOf( jInput1Field.getText() );   //area of the base
        double input2 = Double.valueOf( jInput2Field.getText() );   //height
        double output = theMathematicalOperation.SquareBasedPyramidVolume(input1, input2);
        jOutputField.setText(String.valueOf(output));
    }//GEN-LAST:event_jSquareBasedPyramidVolumeButtonActionPerformed
    //done
    private void jConeVolumeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jConeVolumeButtonActionPerformed
        // volume = 1/3* Pi * r^2* h , where r = radius and h = height;
        double input1 = Double.valueOf( jInput1Field.getText() );   //radius
        double input2 = Double.valueOf( jInput2Field.getText() );   //height
        double output = theMathematicalOperation.ConeVolume(input1, input2);
        jOutputField.setText(String.valueOf(output));
    }//GEN-LAST:event_jConeVolumeButtonActionPerformed
    //done
    private void jCylinderVolumeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCylinderVolumeButtonActionPerformed
        // volume = Pi * r^2 * h, where r = radius and h = height;
        double input1 = Double.valueOf( jInput1Field.getText() );   //radius
        double input2 = Double.valueOf( jInput2Field.getText() );   //height
        //double input3 = Double.valueOf( jHeightField.getText() ); I do not need 3 inputs, just 2 here
        double output = theMathematicalOperation.CylinderVolume(input1, 2, input2);
        jOutputField.setText(String.valueOf(output));
        jStatusMessageLabel.setText("Cylinder volume of radius " + input1 + "^2 * height " + input2 + ".");
    }//GEN-LAST:event_jCylinderVolumeButtonActionPerformed
    //done
    private void jRectangularVolumeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRectangularVolumeButtonActionPerformed
        // volume = length × width × height;
        double input1 = Double.valueOf( jInput1Field.getText() );   //length
        double input2 = Double.valueOf( jInput2Field.getText() );   //width
        double input3 = Double.valueOf( jHeightField.getText() );   //height
        double output = theMathematicalOperation.RectangularVolume(input1,input2,input3);
        jOutputField.setText(String.valueOf(output));
        jStatusMessageLabel.setText("Rectangular volume of " + input1 + "*" + input2 + "*" + input3 + ".");
    }//GEN-LAST:event_jRectangularVolumeButtonActionPerformed
    //done
    private void jPowerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPowerButtonActionPerformed
        // input1 will be the base, input2 the power
        // "Declare and implement separate power() method and call it when dedicated button is created." Can you elaborate?
        double input1 = Double.valueOf( jInput1Field.getText() );       //base
        double input2 = Double.valueOf( jInput2Field.getText() );       //power
        double output = theMathematicalOperation.power(input1, input2);
        // Display the result in the output field
        jOutputField.setText(String.valueOf(output));
        jStatusMessageLabel.setText("Calculated " + input1 + " to the power of " + input2 + ".");
    }//GEN-LAST:event_jPowerButtonActionPerformed
    //done
    private void jButtonDivideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDivideActionPerformed
        double input1 = Double.valueOf( jInput1Field.getText() );
        double input2 = Double.valueOf( jInput2Field.getText() );
        if(input2==0){
            jStatusMessageLabel.setText("Cannot divide by zero");
            String stroutput = "error";
            jOutputField.setText(stroutput);
        }
        else {
            //output = input1 / input2;
            jOutputField.setText(String.valueOf(input1 / input2));
        }
    }//GEN-LAST:event_jButtonDivideActionPerformed
    //done
    private void jButtonMultiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMultiplyActionPerformed
        double input1 = Double.valueOf( jInput1Field.getText() );
        double input2 = Double.valueOf( jInput2Field.getText() );
        jOutputField.setText(String.valueOf( theMathematicalOperation.MultiplyMethod(input1,input2) ));
    }//GEN-LAST:event_jButtonMultiplyActionPerformed
    //done
    private void jButtonMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMinusActionPerformed
        double input1 = Double.valueOf( jInput1Field.getText() );
        double input2 = Double.valueOf( jInput2Field.getText() );
        //output = (input1 - input2);
        String format = String.format("%.4f", (input1 - input2) );
        jOutputField.setText(String.valueOf(format));
    }//GEN-LAST:event_jButtonMinusActionPerformed
    //done
    private void jButtonPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPlusActionPerformed
        // Read the data from the Input fields 1 and 2 and save them to the respectible variables
        // I will use float instead of integer as calculator can add float numbers as well
        double input1 = Double.valueOf( jInput1Field.getText() );
        double input2 = Double.valueOf( jInput2Field.getText() );
        double output = (input1 + input2);
        String format = String.format("%f", output);
        // Display the result in the output field
        jOutputField.setText(String.valueOf(format));
    }//GEN-LAST:event_jButtonPlusActionPerformed
    //done
    private void jLoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLoginButtonActionPerformed
        if ( theUser.areLoginInputsCorrect( jRoleComboBox, jNameTextField.getText(), jPasswordField.getText()) ) {
            if ( theUser.isUser(jNameTextField.getText(), jPasswordField.getText(), jRoleComboBox.getSelectedItem().toString() ) ) {
                jStatusMessageLabel.setText("Logged in.");
                
                switch (jRoleComboBox.getSelectedItem().toString()) {
                    case "Administrator":
                        jMainTabbedPanel.addTab("Calculator", jTabInMemory_1);
                        jMainTabbedPanel.addTab("Head Office Address", jTabInMemory_2);
                        jMainTabbedPanel.addTab("Edit Head Office Details", jTabInMemory_3);
                        jMainTabbedPanel.addTab("Branches", jTabInMemory_4);
                        jMainTabbedPanel.addTab("Clients", jTabInMemory_5);
                        jMainTabbedPanel.addTab("Transactions", jTabInMemory_6);
                        if (jMainTabbedPanel.getTitleAt(3).contentEquals("Edit Head Office Details")){
                            jMainTabbedPanel.setEnabledAt(3, false);
                        }   jMainTabbedPanel.setSelectedIndex(1);
                        
                        jAddSubdepartment.setVisible(false);
                        jRemoveSubdeptBtn.setVisible(false);
                        jRemoveBranchBtn.setVisible(false);
                        jAddBranchBtn.setVisible(false);
                        jBranchesSaveToFileBtn.setVisible(false);
                        jAddClientBtn.setVisible(false);
                        jRemoveClientBtn.setVisible(false);
                        jExportClientstoFileBtn.setVisible(false);
                        jOpenNewAccountBtn.setVisible(false);
                        jApproveTransactionBtn.setVisible(false);
                        break;
                        
                    case "Manager":
                        jMainTabbedPanel.addTab("Calculator", jTabInMemory_1);
                        jMainTabbedPanel.addTab("Head Office Address", jTabInMemory_2);
                        jMainTabbedPanel.addTab("Edit Head Office Details", jTabInMemory_3);
                        jMainTabbedPanel.addTab("Branches", jTabInMemory_4);
                        jMainTabbedPanel.addTab("Clients", jTabInMemory_5);
                        jMainTabbedPanel.addTab("Transactions", jTabInMemory_6);
                        jMainTabbedPanel.setSelectedIndex(1);

                        break;
                        
                    case "Advisor":
                        jMainTabbedPanel.addTab("Calculator", jTabInMemory_1);
                        jMainTabbedPanel.addTab("Head Office Address", jTabInMemory_2);
                        jMainTabbedPanel.addTab("Branches", jTabInMemory_4);
                        jMainTabbedPanel.addTab("Clients", jTabInMemory_5);
                        jMainTabbedPanel.setSelectedIndex(1);
                        jRegisterButton.setVisible(false);
                        jAddClientBtn.setVisible(false);
                        jRemoveClientBtn.setVisible(false);
                        jExportClientstoFileBtn.setVisible(false);
                        jOpenNewAccountBtn.setVisible(false);
                        jAddSubdepartment.setVisible(false);
                        jRemoveSubdeptBtn.setVisible(false);
                        jRemoveBranchBtn.setVisible(false);
                        jAddBranchBtn.setVisible(false);
                        jBranchesSaveToFileBtn.setVisible(false);
                        
                        break;
                        
                    default:
                        if (jRoleComboBox.getSelectedItem().toString().equals("Customer")) {
                            jMainTabbedPanel.addTab("Calculator", jTabInMemory_1);
                            jMainTabbedPanel.addTab("Head Office Address", jTabInMemory_2);
                            jMainTabbedPanel.addTab("Clients", jTabInMemory_5);
                            
                            //Disable functions not for client:
                            jAddClientBtn.setVisible(false);
                            jRemoveClientBtn.setVisible(false);
                            jSearchForClientBtn.setVisible(false);
                            jOpenNewAccountBtn.setVisible(false);  
                            
                            jMainTabbedPanel.setSelectedIndex(1);
                            jDisplayClientInformationBtn.setVisible(false);
                            jExportClientstoFileBtn.setVisible(false);
                        }
                        else jStatusMessageLabel.setText("Cannot login, please check login and password.");
                        break;    
                } 
                importClients();
                jStatusAnimationLabel.setText(jNameTextField.getText() + " " + jRoleComboBox.getSelectedItem().toString() + " is logged in.");
            } else jStatusMessageLabel.setText("Incorrect information entered, or the user is not existent.");
        } else jStatusMessageLabel.setText("Please input valid username, password and role.");    
    }//GEN-LAST:event_jLoginButtonActionPerformed
    //done
    private void jRegisterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRegisterButtonActionPerformed
        if( !theUser.areLoginInputsCorrect( jRoleComboBox, jNameTextField.getText(), jPasswordField.getText() ) ){
            jStatusMessageLabel.setText("Please input valid username andpassword.");
        }
        else{
            if (!theUser.isRegistered(jNameTextField.getText(), jPasswordField.getText(), jRoleComboBox.getSelectedItem().toString())) {
                jStatusMessageLabel.setText("Cannot register the user.");
            } 
            else jStatusMessageLabel.setText("The " + jNameTextField.getText() + " is registered. Please log in now.");
        }
    }//GEN-LAST:event_jRegisterButtonActionPerformed
    //done
    private void jSaveOfficeDetailsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSaveOfficeDetailsButtonActionPerformed
        String headOfficeName = jEditHeadOfficeNameTextField.getText();
        String houseName = jEditHeadOfficeHouseNameTextField.getText();
        Integer houseNo = Integer.parseInt(jEditHeadOfficeHouseNoTextField.getText());
        String street = jEditHeadOfficeStreetTextField.getText();
        String area = jEditHeadOfficeAreaTextField.getText();
        String postCode = jEditHeadOfficePostCodeTextField.getText();
        String town = jEditHeadOfficeTownTextField.getText();
        String country = jEditHeadOfficeCountryTextField.getText();
        String sortCode = jEditHeadOfficeSortCodeTextField.getText();
        String workingHours = jEditHeadOfficeWorkingHoursTextField.getText();
        
        if(!(   headOfficeName.equals("") || houseName.equals("") || houseNo == 0
                || street.equals("") || area.equals("") || postCode.equals("") || town.equals("")
                || country.equals("")|| sortCode.equals("") || workingHours.equals("")))
        {
                theHeadOfficeBranch = new ClsBranch(headOfficeName, houseName, houseNo, street, area, postCode, town, country, sortCode, workingHours);
                theHeadOfficeBranch.saveToFile();
                jStatusMessageLabel.setText("Branch added.");
        }
        else jStatusMessageLabel.setText("Please, input values first.");
    }//GEN-LAST:event_jSaveOfficeDetailsButtonActionPerformed
    //done
    private void jDisplayBranchesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDisplayBranchesBtnActionPerformed
        jBranchesTextArea.setText(null);
        bankBranches.display(jBranchesTextArea);
    }//GEN-LAST:event_jDisplayBranchesBtnActionPerformed
    //done
    private void jAddBranchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddBranchBtnActionPerformed
            String branchName = jBranchNameTextField.getText();
            String houseName = jBranchHouseNameTextField.getText();
            Integer houseNo = Integer.parseInt(jBranchHouseNumberTextField.getText());
            String street = jBranchStreetTextField.getText();
            String area = jBranchAreaTextArea.getText();
            String postCode = jBranchPostCodeTextField.getText();
            String town = jBranchTownTextField.getText();
            String country = jBranchCountryTextField.getText();
            String sortCode = jBranchSortCodeTextField.getText();
            String workingHours = jBranchWorkingHoursTextField.getText();
            
        if (!(  branchName.equals("") || houseName.equals("") || houseNo == 0
                || street.equals("") || area.equals("") || postCode.equals("") || town.equals("")
                || country.equals("") || sortCode.equals("") || workingHours.equals("")))
        {
            if (bankBranches.addBranch(theHeadOfficeBranch = new ClsBranch(
                    branchName, houseName, houseNo, street, area, postCode, town, country,  //address
                    sortCode, workingHours))){                                               //details
                jStatusAnimationLabel.setText("Branch added successfully.");
            }
            else jStatusAnimationLabel.setText("Could not add the branch.");
        }
        else jStatusMessageLabel.setText("Please, input values first.");
    }//GEN-LAST:event_jAddBranchBtnActionPerformed
    //done
    private void jRemoveBranchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRemoveBranchBtnActionPerformed
        String BranchNameToDelete = jBranchNameTextField.getText();
        if(bankBranches.deleteBranch(BranchNameToDelete)){
            jStatusAnimationLabel.setText("Branch removed successfully.");
        } 
        else jStatusAnimationLabel.setText("Could not remove the branch.");
    }//GEN-LAST:event_jRemoveBranchBtnActionPerformed
    //done
    private void jBranchesSaveToFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBranchesSaveToFileBtnActionPerformed
        bankBranches.saveToFile();
    }//GEN-LAST:event_jBranchesSaveToFileBtnActionPerformed
    //done
    private void jBranchesLoadFromFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBranchesLoadFromFileBtnActionPerformed
        bankBranches.loadFromFile("branches.txt");
    }//GEN-LAST:event_jBranchesLoadFromFileBtnActionPerformed
    //done
    private void jDisplaySubDepsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDisplaySubDepsActionPerformed
        //recursive relation
        bankBranches.createDepartment();
        bankBranches.getSubDepartments().loadFromFile("subdepartments.txt");
        jBranchesTextArea.setText("");
        bankBranches.getSubDepartments().display(jBranchesTextArea);
    }//GEN-LAST:event_jDisplaySubDepsActionPerformed
    //done
    private void jRemoveSubdeptBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRemoveSubdeptBtnActionPerformed
        String SubDepartmentNameToDelete = jBranchNameTextField.getText();
        String textToRemove = theHeadOfficeBranch.getBranchAddress() + ", " + theHeadOfficeBranch.branchDetailsOutput();
        if(!SubDepartmentNameToDelete.equals("")){
            theHeadOfficeBranch = bankBranches.findBranch(SubDepartmentNameToDelete);
            bankBranches.removeLineFromFile("subdepartments.txt", textToRemove);
            bankBranches.getSubDepartments().loadFromFile("subdepartments.txt");
            jBranchesTextArea.setText("");
            bankBranches.getSubDepartments().display(jBranchesTextArea);
        }
        else jStatusMessageLabel.setText("Please, write Branch name to remove.");
    }//GEN-LAST:event_jRemoveSubdeptBtnActionPerformed
    //done
    private void jAddSubdepartmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddSubdepartmentActionPerformed
        String branchName = jBranchNameTextField.getText();
        String houseName = jBranchHouseNameTextField.getText();
        Integer houseNo = Integer.parseInt(jBranchHouseNumberTextField.getText());
        String street = jBranchStreetTextField.getText();
        String area = jBranchAreaTextArea.getText();
        String postCode = jBranchPostCodeTextField.getText();
        String town = jBranchTownTextField.getText();
        String country = jBranchCountryTextField.getText();
        String sortCode = jBranchSortCodeTextField.getText();
        String workingHours = jBranchWorkingHoursTextField.getText();
        
        if (!(branchName.equals("") || houseName.equals("") || houseNo == 0
               || street.equals("") || area.equals("")      || postCode.equals("")
               || town.equals("")   || country.equals("")   || sortCode.equals("")
               || workingHours.equals("")))
        {
            theHeadOfficeBranch = new ClsBranch(branchName, houseName, houseNo, street, area, postCode, town, country, sortCode, workingHours);
            bankBranches.createDepartment();
            bankBranches.getSubDepartments();
            bankBranches.removeLineFromFile("subdepartments.txt", "EmptyLine");
            bankBranches.saveToSubdepartmentsFile("subdepartments.txt", theHeadOfficeBranch);
            jStatusMessageLabel.setText("Subdepartment added.");
        } else jStatusAnimationLabel.setText("Please input values first.");
    }//GEN-LAST:event_jAddSubdepartmentActionPerformed
    //done
    private void jLogOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLogOutButtonActionPerformed
        int indexToRemove = 0;
        if (theUser.getRole().equals("Administrator")) {
            jTabInMemory_1 = jMainTabbedPanel.getComponentAt(1);
            jTabInMemory_2 = jMainTabbedPanel.getComponentAt(2);
            jTabInMemory_3 = jMainTabbedPanel.getComponentAt(3);
            jTabInMemory_4 = jMainTabbedPanel.getComponentAt(4);
            jTabInMemory_5 = jMainTabbedPanel.getComponentAt(5);
            jTabInMemory_6 = jMainTabbedPanel.getComponentAt(6);
            indexToRemove = 6;
        }
        else if (theUser.getRole().equals("Manager")) {
            jTabInMemory_1 = jMainTabbedPanel.getComponentAt(1);
            jTabInMemory_2 = jMainTabbedPanel.getComponentAt(2);
            jTabInMemory_3 = jMainTabbedPanel.getComponentAt(3);
            jTabInMemory_4 = jMainTabbedPanel.getComponentAt(4);
            jTabInMemory_5 = jMainTabbedPanel.getComponentAt(5);
            jTabInMemory_6 = jMainTabbedPanel.getComponentAt(6);
            indexToRemove = 6;
        }
        else if (theUser.getRole().equals("Advisor")) {
            jTabInMemory_1 = jMainTabbedPanel.getComponentAt(1);
            jTabInMemory_2 = jMainTabbedPanel.getComponentAt(2);
            indexToRemove = 2;
        }
        else {
            if (theUser.getRole().equals("Customer")) {
                jTabInMemory_1 = jMainTabbedPanel.getComponentAt(1);
                jTabInMemory_2 = jMainTabbedPanel.getComponentAt(2);
                jTabInMemory_3 = jMainTabbedPanel.getComponentAt(3);
                jRegisterButton.setVisible(false);
                indexToRemove = 3;
            } 
            else jStatusMessageLabel.setText("Cannot login, please check login and password.");
        }
        
        for (int index = 0; index < jMainTabbedPanel.getTabCount(); index++) {
            if (!jMainTabbedPanel.getTitleAt(index).contentEquals("Login")) {
                jMainTabbedPanel.setEnabledAt(index, false);
            }
        }
        for (int index = indexToRemove; index > 0; index--) {
            jMainTabbedPanel.remove(index);
        }
        jMainTabbedPanel.setSelectedIndex(0);
        
    }//GEN-LAST:event_jLogOutButtonActionPerformed
    //done 
    private void jOpenNewAccountBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOpenNewAccountBtnActionPerformed
        String sortCode = jSortCodeTextField.getText();
        int accountNo = Integer.parseInt(jNumberTextField.getText());
        String bankName = jBankNameTextField.getText();
        String accountType = jAccountTypeComboBox.getSelectedItem().toString();
        String conditions = jAccountConditionsTextArea.getText();
        // Search for customer has to be done before creating account, so the theCustomer object is already
        // instantiated with the correct values. I can then pass it to the accounts as the associated customer 
        // with that particular account type.
        if(!((sortCode.equals(""))
                || (accountNo == 0)
                || (bankName.equals(""))
                || (accountType.equals("Please select"))
                || (conditions.equals("")))
        ){
            if(!(theCustomer.getCustomerDetails()[0].equals(" "))){
                // Variable of class Account that will be saved to the client's file.
                // In each case below, it is set to different type of account.
                // possible error here as it is of class account and 3 different subtypes of accounts are assigned to it
                switch(accountType){
                    case "Current Account":  
                        currentAcc = new ClsCurrentAccount(accountType, sortCode, accountNo, 0, bankName, 1.2, 0, theCustomer, conditions, 0, 100.00, 25.00);
                        //System.out.println("Account created.\n");
                        //System.out.println(theCustomer.outputCustomerDetails());
                        theCustomer.createAccountList();
                        theCustomer.createAccount(currentAcc);
                        theCustomer.populateJListFromArrayList(AccountListModel);
                        bankBranches.removeLineFromFile("Client_"+theCustomer.getCustomerDetails()[0]+theCustomer.getCustomerDetails()[1]+"_CAs.txt", "EmptyLine");
                        theCustomer.saveToClientFile("Client_"+theCustomer.getCustomerDetails()[0]+theCustomer.getCustomerDetails()[1]+"_CAs.txt", currentAcc);
                        jStatusMessageLabel.setText("Account created.");
                        break;

                    case "ISA Account":
                        ISAAcc = new ClsISAAccount(accountType, sortCode, accountNo, 0, bankName, 1.2, 0, theCustomer, 3250, 0 );
                        //System.out.println("Account created.\n");
                        //System.out.println(theCustomer.outputCustomerDetails());
                        theCustomer.createAccountList();
                        theCustomer.createAccount(ISAAcc);
                        theCustomer.populateJListFromArrayList(AccountListModel);
                        bankBranches.removeLineFromFile("Client_"+theCustomer.getCustomerDetails()[0]+theCustomer.getCustomerDetails()[1]+"_ISAs.txt", "EmptyLine");
                        theCustomer.saveToClientFile("Client_"+theCustomer.getCustomerDetails()[0]+theCustomer.getCustomerDetails()[1]+"_ISAs.txt", ISAAcc);
                        jStatusMessageLabel.setText("Account created.");
                        break;

                    case "Saving Account":
                        savingsAcc = new ClsSavingsAccount(accountType, sortCode, accountNo, 0, bankName, 1.2, 0, theCustomer, 200);
                        //System.out.println("Account created.\n");
                        //System.out.println(theCustomer.outputCustomerDetails());
                        jStatusMessageLabel.setText("Account created.");
                        theCustomer.createAccountList();
                        theCustomer.createAccount(savingsAcc);
                        theCustomer.populateJListFromArrayList(AccountListModel);
                        bankBranches.removeLineFromFile("Client_"+theCustomer.getCustomerDetails()[0]+theCustomer.getCustomerDetails()[1]+"_SAs.txt", "EmptyLine");
                        theCustomer.saveToClientFile("Client_"+theCustomer.getCustomerDetails()[0]+theCustomer.getCustomerDetails()[1]+"_SAs.txt", savingsAcc);
                        jStatusMessageLabel.setText("Account created.");
                        break;
                    default: jStatusMessageLabel.setText("Something went wrong, can't create an account.");
                }
            } else jStatusMessageLabel.setText("Please, search for and select a customer first.");
        } else jStatusMessageLabel.setText("Please, fill out all fields related to account creation.");
    }//GEN-LAST:event_jOpenNewAccountBtnActionPerformed
    //done
    private void jSummarySelectedAccBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSummarySelectedAccBtnActionPerformed
        String firstName = jClientFirstNameTextField.getText();
        String lastName = jClientSurnameTextField.getText();
        String DOB = jClientDOBTextField.getText();
        String customerSince = jClientSinceTextField.getText();
        String houseName = jClientHouseNameTextField.getText();
        Integer houseNo = Integer.parseInt(jClientHouseNumberTextField.getText());
        String street = jClientStreetTextField.getText();
        String area = jClientAreaTextField.getText();
        String postCode = jClientPostCodeTextField.getText();
        String town = jClientTownTextField.getText();
        String country = jClientCountryTextField.getText();
        
        String sortCode = jSortCodeTextField.getText();
        int accNo = Integer.parseInt(jNumberTextField.getText());
                
        if (!(  firstName.equals("") || lastName.equals("") || DOB.equals("") || customerSince.equals("") 
                || houseName.equals("")  || houseNo == 0 || street.equals("")  || area.equals("")  
                || postCode.equals("")  || town.equals("")  || country.equals("")) && theCustomer != null)
        {
            if (theCustomer.checkSize()){
                if (theCustomer.checkDOBFormat(DOB)) {
                        //polymorphism used below
                        jAccountsTextArea.setText("");
                        
                    if (theCustomer.returnSpecificAcc(sortCode, accNo) != null) {
                        theCustomer.returnSpecificAcc(sortCode, accNo).display(jAccountsTextArea);
                    } else jAccountsTextArea.setText("Account not found.");
                } else jStatusMessageLabel.setText("DOB field has incorrect format. Please input DD/MM/YYYY.");
            } else jStatusMessageLabel.setText("The customer has no accounts associated.");
        } 
        else{
            if (theUser.getRole().equals("Customer")){
                jStatusMessageLabel.setText("Please, fill out all your details first.");
            }
            else jStatusMessageLabel.setText("Please, fill out all customer details and search for a customer first.");
        }
    }//GEN-LAST:event_jSummarySelectedAccBtnActionPerformed
    //done
    private void jSearchForClientBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSearchForClientBtnActionPerformed
        String firstName = jClientFirstNameTextField.getText();
        String lastName = jClientSurnameTextField.getText();
        // Date fields
        String fieldDOB = jClientDOBTextField.getText();
        String fieldCustomerSince = jClientSinceTextField.getText();
        // Date formatter
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        
        Date timeDOB = new Date();
        Date timeCS = new Date();

        String houseName = jClientHouseNameTextField.getText();
        Integer houseNo = Integer.parseInt(jClientHouseNumberTextField.getText());
        String street = jClientStreetTextField.getText();
        String area = jClientAreaTextField.getText();
        String postCode = jClientPostCodeTextField.getText();
        String town = jClientTownTextField.getText();
        String country = jClientCountryTextField.getText();

        if (!(firstName.equals("") || lastName.equals("") || fieldDOB.equals("") || fieldCustomerSince.equals("")
                || houseName.equals("") || houseNo == 0 || street.equals("") || area.equals("")
                || postCode.equals("") || town.equals("") || country.equals(""))) 
        {
            if (theCustomer.checkDOBFormat(jClientDOBTextField.getText()) && theCustomer.checkDOBFormat(jClientSinceTextField.getText())) {
    
                try {
                    timeDOB = sdf.parse(fieldDOB);
                    timeCS = sdf.parse(fieldCustomerSince);
                } catch (ParseException ex) {
                    Logger.getLogger(BankingGUIFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                java.sql.Date sqlDOB = new java.sql.Date(timeDOB.getTime());
                java.sql.Date sqlCS = new java.sql.Date(timeCS.getTime());

                //System.out.println("MainFrame sqlDOB: " + sqlDOB + "\n");
                //System.out.println("MainFrame sqlCS: " + sqlCS + "\n");
                
                theAddress = new ClsIAddress(firstName, houseName, houseNo, street, area, postCode, town, country);
                theCustomer = new ClsCustomer(firstName, lastName, sqlDOB, sqlCS, theAddress);
                jClientsTextArea.setText("");
                
                if(bankClients.findCustomer(jClientsTextArea, theCustomer)){
                        loadAcounts();
                    jStatusMessageLabel.setText("Customer found and selected.");
                } else jStatusMessageLabel.setText("Customer not found.");
            } else jStatusMessageLabel.setText("DOB field has incorrect format. Please input DD/MM/YYYY.");
        } else jStatusMessageLabel.setText("Please, specify all customer details.");
    }//GEN-LAST:event_jSearchForClientBtnActionPerformed
    //fix new
    private void jImportClientsfromFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jImportClientsfromFileBtnActionPerformed
        importClients();
    }//GEN-LAST:event_jImportClientsfromFileBtnActionPerformed
    //done
    private void jExportClientstoFileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jExportClientstoFileBtnActionPerformed
        bankClients.saveToFile();
        jStatusMessageLabel.setText("Exported.");
        //theCustomer.saveToFile(jAccountTypeComboBox.getSelectedItem().toString());
    }//GEN-LAST:event_jExportClientstoFileBtnActionPerformed
    //done
    private void jRemoveClientBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRemoveClientBtnActionPerformed
        String firstName = jClientFirstNameTextField.getText();
        String lastName = jClientSurnameTextField.getText();
        String fieldDOB = jClientDOBTextField.getText();
        String fieldCustomerSince = jClientSinceTextField.getText();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        Date timeDOB = new Date();
        Date timeCS = new Date();
        String houseName = jClientHouseNameTextField.getText();
        Integer houseNo = Integer.parseInt(jClientHouseNumberTextField.getText());
        String street = jClientStreetTextField.getText();
        String area = jClientAreaTextField.getText();
        String postCode = jClientPostCodeTextField.getText();
        String town = jClientTownTextField.getText();
        String country = jClientCountryTextField.getText();

        if (!(firstName.equals("") || lastName.equals("") || fieldDOB.equals("") || fieldCustomerSince.equals("")
                || houseName.equals("") || houseNo == 0 || street.equals("") || area.equals("")
                || postCode.equals("") || town.equals("") || country.equals("")))
        {
            if (theCustomer.checkDOBFormat(jClientDOBTextField.getText()) && theCustomer.checkDOBFormat(jClientSinceTextField.getText())) {
                try {
                    timeDOB = sdf.parse(fieldDOB);
                    timeCS = sdf.parse(fieldCustomerSince);
                } catch (ParseException ex) {
                    Logger.getLogger(BankingGUIFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                java.sql.Date sqlDOB = new java.sql.Date(timeDOB.getTime());
                java.sql.Date sqlCS = new java.sql.Date(timeCS.getTime());
                
                theAddress = new ClsIAddress(firstName, houseName, houseNo, street, area, postCode, town, country);
                theCustomer = new ClsCustomer(firstName, lastName, sqlDOB, sqlCS, theAddress);
                jClientsTextArea.setText("");
                if(bankClients.findCustomer(jClientsTextArea, theCustomer)){
                    bankClients.deleteCustomer(theCustomer);
                    jStatusAnimationLabel.setText("Customer removed successfully. Please, refresh the list.");
                }
                else jStatusAnimationLabel.setText("Could not remove the customer, please check if the First name" + "\n" + ", Last name and DOB correspond.");
                
            }
        }  
    }//GEN-LAST:event_jRemoveClientBtnActionPerformed
    //done
    private void jAddClientBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddClientBtnActionPerformed
        String firstName = jClientFirstNameTextField.getText();
        String lastName = jClientSurnameTextField.getText();
        // Date fields
        String fieldDOB = jClientDOBTextField.getText();
        String fieldCustomerSince = jClientSinceTextField.getText();
        // Date formatter
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        
        Date timeDOB = new Date();
        Date timeCS = new Date();


        String firstName2 = jClientFirstNameTextField.getText();
        String houseName = jClientHouseNameTextField.getText();
        Integer houseNo = Integer.parseInt(jClientHouseNumberTextField.getText());
        String street = jClientStreetTextField.getText();
        String area = jClientAreaTextField.getText();
        String postCode = jClientPostCodeTextField.getText();
        String town = jClientTownTextField.getText();
        String country = jClientCountryTextField.getText();

        // Field verification
        if (!(  firstName.equals("") || lastName.equals("") || fieldDOB.equals("") || fieldCustomerSince.equals("") 
                || houseName.equals("")  || houseNo == 0 || street.equals("")  || area.equals("")  
                || postCode.equals("")  || town.equals("")  || country.equals(""))) 
        {
            if (theCustomer.checkDOBFormat(jClientDOBTextField.getText()) && theCustomer.checkDOBFormat(jClientSinceTextField.getText())) {

                try {
                    timeDOB = sdf.parse(fieldDOB);
                    timeCS = sdf.parse(fieldCustomerSince);
                } catch (ParseException ex) {
                    Logger.getLogger(BankingGUIFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                java.sql.Date sqlDOB = new java.sql.Date(timeDOB.getTime());
                java.sql.Date sqlCS = new java.sql.Date(timeCS.getTime());

                //System.out.println("MainFrame sqlDOB: " + sqlDOB + "\n");
                //System.out.println("MainFrame sqlCS: " + sqlCS + "\n");
                
                theAddress = new ClsIAddress(firstName2, houseName, houseNo, street, area, postCode, town, country);

                if (bankClients.addCustomer(theCustomer = new ClsCustomer(firstName, lastName, sqlDOB, sqlCS, theAddress))) {
                    jStatusAnimationLabel.setText("Customer added successfully.");
                } else jStatusAnimationLabel.setText("Could not add the customer.");
            } else jStatusMessageLabel.setText("DOB field has incorrect format. Please input DD/MM/YYYY.");
        } else jStatusMessageLabel.setText("Please, fill out all fields.");
    }//GEN-LAST:event_jAddClientBtnActionPerformed
    //done
    private void jDisplayClientInformationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDisplayClientInformationBtnActionPerformed
        jClientsTextArea.setText(null);
        bankClients.display(jClientsTextArea);
    }//GEN-LAST:event_jDisplayClientInformationBtnActionPerformed
    //new
    private void jGenerateStatementBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jGenerateStatementBtnActionPerformed
        double amount = Double.parseDouble(jTransactionsAmountTextField.getText());
        String firstName = jTransactionsFirstNameTextField.getText();
        String surname = jTransactionsSurnameTextField.getText();
        String DOB = jTransactionsDOBTextField.getText();
        String sortCode = jSortCodeTextField.getText();
        int accNo = Integer.parseInt(jTransactionsAccNumberTextField.getText());
           
        if(!(amount == 0 || firstName == "" || surname == "" || DOB == "" || accNo == 0 || sortCode == "") && theCustomer != null ){
            if(theCustomer.returnSpecificAcc(sortCode, accNo).transactionsList != null){
                
                try {
                    // load from files to transactionList
                    //String filename, ClsCustomer aCustomer
                    theCustomer.returnSpecificAcc(sortCode, accNo).transactionsList.loadFromFile(
                        "transactions_"+theCustomer.getCustomerDetails()[0]+theCustomer.getCustomerDetails()[1]+".txt",
                        theCustomer
                     );
                    
                } catch (ParseException ex) {
                    Logger.getLogger(BankingGUIFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            
                // display the transactionList
                theCustomer.returnSpecificAcc(sortCode, accNo).transactionsList.display(jTransactionTextArea);
            }
            else {
                jStatusMessageLabel.setText("No transactions available.");
                theCustomer.returnSpecificAcc(sortCode, accNo).transactionsList = new ClsTransactionList();
            
            }
            
        }
        else jStatusMessageLabel.setText("Please, fill out all fields in the transaction first.");
    }//GEN-LAST:event_jGenerateStatementBtnActionPerformed
    //fix
    private void jDepositBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDepositBtnActionPerformed
        double amount = Double.parseDouble(jTransactionsAmountTextField.getText());
        String firstName = jTransactionsFirstNameTextField.getText();
        String surname = jTransactionsSurnameTextField.getText();
        String DOB = jTransactionsDOBTextField.getText();
        String sortCode = jSortCodeTextField.getText();
        int accNo = Integer.parseInt(jTransactionsAccNumberTextField.getText());
           
        if(!(amount == 0 || firstName == "" || surname == "" || DOB == "" || accNo == 0 || sortCode == "") && theCustomer != null){
            theCustomer.returnSpecificAcc(sortCode, accNo).deposit(amount);
            // Testing:
            //System.out.println(theCustomer.returnSpecificAcc(sortCode, accNo).balance);
            
            // Get Customer's account via Customer object and then via the account, get transaction list and use method display in the transaction list
            theCustomer.returnSpecificAcc(sortCode, accNo).transactionsList.display(jTransactionTextArea);
        }
        else jStatusMessageLabel.setText("Please, fill out all fields and search for a customer in Clients tab first.");
    }//GEN-LAST:event_jDepositBtnActionPerformed
    //fix
    private void jWithdrawBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jWithdrawBtnActionPerformed
        double amount = Double.parseDouble(jTransactionsAmountTextField.getText());
        String firstName = jTransactionsFirstNameTextField.getText();
        String surname = jTransactionsSurnameTextField.getText();
        String DOB = jTransactionsDOBTextField.getText();
        String sortCode = jTransactionsSortCodeTextField.getText();
        int accNo = Integer.parseInt(jTransactionsAccNumberTextField.getText());

        if(!(amount == 0 || firstName == "" || surname == "" || DOB == "" || accNo == 0 || sortCode == "")){
            theCustomer.returnSpecificAcc(sortCode, accNo).withdraw(amount);
            //System.out.println(theCustomer.returnSpecificAcc(sortCode, accNo).balance);
            theCustomer.returnSpecificAcc(sortCode, accNo).transactionsList.display(jTransactionTextArea);
        }
        else jStatusMessageLabel.setText("Please, fill out all fields.");
    }//GEN-LAST:event_jWithdrawBtnActionPerformed
    
    private void importClients(){       
        String role = theUser.getRole();
        try {
            if (role.equals("Manager") || role.equals("Advisor") || role.equals("Administrator")) {
                bankClients.loadFromFile("customers.txt", 1);
                // Import customers file only  
            } 
            
            else if (role.equals("Customer")) {
                bankClients.loadFromFile("customers.txt", 1);
                jImportClientsfromFileBtn.setText("Load my file.");
                String firstName = jClientFirstNameTextField.getText();
                String surname = jClientSurnameTextField.getText();
            
                if (!(firstName.equals("") || surname.equals(""))) {
                    //System.out.println("here1.");

                    if ((bankClients.matchCustomer(firstName, surname)) != null) {
                        theCustomer = bankClients.matchCustomer(firstName, surname);
                        jClientsTextArea.setText(null);
                        theCustomer.displayCustomerDetails(jClientsTextArea);
                        theCustomer.displayCustomerAddress(jClientsTextArea);
                        
                        loadAcounts();
                        
                    } else {
                        jStatusAnimationLabel.setText("Can't load your file, please try again.");
                    }
                }
                jStatusAnimationLabel.setText("Please fill in your first name and surname.");
            } 
            else {
                jStatusAnimationLabel.setText("Can't load customers' file.");
            }
        } catch (ParseException ex) {
            Logger.getLogger(BankingGUIFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void loadAcounts() {
        theCustomer.createAccountList();
        //Filename has format of: "Client_"+theCustomer.getCustomerDetails()[0]+theCustomer.getCustomerDetails()[1]+".txt"
        //client_FNSUR_CAs.txt, client_FNSUR_ISAs.txt, client_FNSUR_SAs.txt
        theCustomer.loadCAsFromFile("client_" + theCustomer.getCustomerDetails()[0] + theCustomer.getCustomerDetails()[1] + "_CAs.txt", theCustomer);

        AccountListModel.clear();
        //System.out.println(AccountListModel.getSize());
        theCustomer.populateJListFromArrayList(AccountListModel);

        theCustomer.loadISAsFromFile("client_" + theCustomer.getCustomerDetails()[0] + theCustomer.getCustomerDetails()[1] + "_ISAs.txt", theCustomer);
        theCustomer.populateJListFromArrayList(AccountListModel);

        theCustomer.loadSAsFromFile("client_" + theCustomer.getCustomerDetails()[0] + theCustomer.getCustomerDetails()[1] + "_SAs.txt", theCustomer);
        theCustomer.populateJListFromArrayList(AccountListModel);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BankingGUIFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BankingGUIFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BankingGUIFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BankingGUIFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BankingGUIFrame().setVisible(true);
            }
        });
    }

    // Manual declaration of objects
    private ClsBranch theHeadOfficeBranch; //Object theHeadOfficeBranch, class ClsBranch
    private ClsMathematicalOperation theMathematicalOperation;
    private ClsCustomer theCustomer;
    private ClsPerson thePerson;
    private ClsIAddress theAddress;
    //private ClsAccount thePersonAccount;
    private ClsCustomerList bankClients; //used to print the details of account into the form using Customer objects
    private ClsBranchList bankBranches;
    private ClsUser theUser;
    private ClsTransactionList bankTransactions;
    
    // Accounts
    private ClsCurrentAccount currentAcc;
    private ClsISAAccount ISAAcc;
    private ClsSavingsAccount savingsAcc;
    
    private java.awt.Component jTabInMemory_1;
    private java.awt.Component jTabInMemory_2;
    private java.awt.Component jTabInMemory_3;
    private java.awt.Component jTabInMemory_4;
    private java.awt.Component jTabInMemory_5;
    private java.awt.Component jTabInMemory_6;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jAccountBalanceLabel;
    private javax.swing.JTextArea jAccountConditionsTextArea;
    private javax.swing.JLabel jAccountNumberLabel1;
    private javax.swing.JComboBox<String> jAccountTypeComboBox;
    private javax.swing.JLabel jAccountTypeLabel;
    private javax.swing.JTextArea jAccountsTextArea;
    private javax.swing.JButton jAddBranchBtn;
    private javax.swing.JButton jAddClientBtn;
    private javax.swing.JToggleButton jAddSubdepartment;
    private javax.swing.JButton jApproveTransactionBtn;
    private javax.swing.JLabel jBalanceLabel;
    private javax.swing.JLabel jBankNameLabel;
    private javax.swing.JTextField jBankNameTextField;
    private javax.swing.JLabel jBranchAreaLabel;
    private javax.swing.JTextField jBranchAreaTextArea;
    private javax.swing.JLabel jBranchCountryLabel;
    private javax.swing.JTextField jBranchCountryTextField;
    private javax.swing.JLabel jBranchHouseNameLabel;
    private javax.swing.JTextField jBranchHouseNameTextField;
    private javax.swing.JLabel jBranchHouseNumberLabel;
    private javax.swing.JTextField jBranchHouseNumberTextField;
    private javax.swing.JLabel jBranchNameLabel;
    private javax.swing.JTextField jBranchNameTextField;
    private javax.swing.JLabel jBranchPostCodeLabel;
    private javax.swing.JTextField jBranchPostCodeTextField;
    private javax.swing.JLabel jBranchSortCodeLabel;
    private javax.swing.JTextField jBranchSortCodeTextField;
    private javax.swing.JLabel jBranchStreetLabel;
    private javax.swing.JTextField jBranchStreetTextField;
    private javax.swing.JLabel jBranchTownLabel;
    private javax.swing.JTextField jBranchTownTextField;
    private javax.swing.JLabel jBranchWorkingHoursLabel;
    private javax.swing.JTextField jBranchWorkingHoursTextField;
    private javax.swing.JLabel jBranchesLabel;
    private javax.swing.JButton jBranchesLoadFromFileBtn;
    private javax.swing.JPanel jBranchesPanel;
    private javax.swing.JButton jBranchesSaveToFileBtn;
    private javax.swing.JTextArea jBranchesTextArea;
    private javax.swing.JButton jButtonDivide;
    private javax.swing.JButton jButtonMinus;
    private javax.swing.JButton jButtonMultiply;
    private javax.swing.JButton jButtonPlus;
    private javax.swing.JPanel jCalculatorPanel;
    private javax.swing.JList<String> jClientAccountsList;
    private DefaultListModel AccountListModel;
    private javax.swing.JLabel jClientAreaLabel;
    private javax.swing.JTextField jClientAreaTextField;
    private javax.swing.JLabel jClientCountryLabel;
    private javax.swing.JTextField jClientCountryTextField;
    private javax.swing.JLabel jClientDOBLabel;
    private javax.swing.JTextField jClientDOBTextField;
    private javax.swing.JLabel jClientFirstNameLabel;
    private javax.swing.JTextField jClientFirstNameTextField;
    private javax.swing.JLabel jClientHouseNameLabel;
    private javax.swing.JTextField jClientHouseNameTextField;
    private javax.swing.JLabel jClientHouseNumberLabel;
    private javax.swing.JTextField jClientHouseNumberTextField;
    private javax.swing.JLabel jClientPostCodeLabel;
    private javax.swing.JTextField jClientPostCodeTextField;
    private javax.swing.JLabel jClientSinceLabel;
    private javax.swing.JTextField jClientSinceTextField;
    private javax.swing.JLabel jClientStreetLabel;
    private javax.swing.JTextField jClientStreetTextField;
    private javax.swing.JLabel jClientSurnameLabel;
    private javax.swing.JTextField jClientSurnameTextField;
    private javax.swing.JLabel jClientTownLabel;
    private javax.swing.JTextField jClientTownTextField;
    private javax.swing.JPanel jClientsPanel;
    private javax.swing.JTextArea jClientsTextArea;
    private javax.swing.JButton jConeVolumeButton;
    private javax.swing.JButton jCylinderVolumeButton;
    private javax.swing.JButton jDepositBtn;
    private javax.swing.JButton jDisplayBranchAddressButton;
    private javax.swing.JButton jDisplayBranchDetailsButton;
    private javax.swing.JButton jDisplayBranchesBtn;
    private javax.swing.JButton jDisplayClientInformationBtn;
    private javax.swing.JButton jDisplayPersonAddressButton;
    private javax.swing.JButton jDisplayPersonDetailsButton;
    private javax.swing.JButton jDisplaySubDeps;
    private javax.swing.JPanel jEditHeadOfficeAddressPanel;
    private javax.swing.JLabel jEditHeadOfficeAreaLabel;
    private javax.swing.JTextField jEditHeadOfficeAreaTextField;
    private javax.swing.JLabel jEditHeadOfficeCountryLabel;
    private javax.swing.JTextField jEditHeadOfficeCountryTextField;
    private javax.swing.JLabel jEditHeadOfficeHouseNameLabel;
    private javax.swing.JTextField jEditHeadOfficeHouseNameTextField;
    private javax.swing.JLabel jEditHeadOfficeHouseNoLabel;
    private javax.swing.JTextField jEditHeadOfficeHouseNoTextField;
    private javax.swing.JLabel jEditHeadOfficeNameLabel;
    private javax.swing.JTextField jEditHeadOfficeNameTextField;
    private javax.swing.JLabel jEditHeadOfficePostCodeLabel;
    private javax.swing.JTextField jEditHeadOfficePostCodeTextField;
    private javax.swing.JLabel jEditHeadOfficeSortCodeLabel;
    private javax.swing.JTextField jEditHeadOfficeSortCodeTextField;
    private javax.swing.JLabel jEditHeadOfficeStreetLabel;
    private javax.swing.JTextField jEditHeadOfficeStreetTextField;
    private javax.swing.JLabel jEditHeadOfficeTownLabel;
    private javax.swing.JTextField jEditHeadOfficeTownTextField;
    private javax.swing.JLabel jEditHeadOfficeWorkingHoursLabel;
    private javax.swing.JTextField jEditHeadOfficeWorkingHoursTextField;
    private javax.swing.JButton jExportClientstoFileBtn;
    private javax.swing.JButton jGenerateStatementBtn;
    private javax.swing.JLabel jHeadOfficeAddressLabel;
    private javax.swing.JPanel jHeadOfficeAddressPanel;
    private javax.swing.JScrollPane jHeadOfficeAddressScrollPane;
    private javax.swing.JTextArea jHeadOfficeTextArea;
    private javax.swing.JTextField jHeightField;
    private javax.swing.JLabel jHeightLabel;
    private javax.swing.JButton jImportClientsfromFileBtn;
    private javax.swing.JTextField jInput1Field;
    private javax.swing.JLabel jInput1Label;
    private javax.swing.JTextField jInput2Field;
    private javax.swing.JLabel jInput2Label;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JButton jLogOutButton;
    private javax.swing.JButton jLoginButton;
    private javax.swing.JPanel jLoginPanel;
    private javax.swing.JPanel jMainPanel;
    private javax.swing.JTabbedPane jMainTabbedPanel;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBarMain;
    private javax.swing.JLabel jNameLabel;
    private javax.swing.JTextField jNameTextField;
    private javax.swing.JTextField jNumberTextField;
    private javax.swing.JButton jOpenNewAccountBtn;
    private javax.swing.JTextField jOutputField;
    private javax.swing.JLabel jOutputLabel;
    private javax.swing.JPasswordField jPasswordField;
    private javax.swing.JLabel jPasswordLabel;
    private javax.swing.JButton jPowerButton;
    private javax.swing.JProgressBar jProgressCompletionBar;
    private javax.swing.JButton jRectangularVolumeButton;
    private javax.swing.JButton jRegisterButton;
    private javax.swing.JButton jRemoveBranchBtn;
    private javax.swing.JButton jRemoveClientBtn;
    private javax.swing.JToggleButton jRemoveSubdeptBtn;
    private javax.swing.JComboBox<String> jRoleComboBox;
    private javax.swing.JLabel jRoleLabel;
    private javax.swing.JButton jSaveOfficeDetailsButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JButton jSearchForClientBtn;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel jSortCodeLabel;
    private javax.swing.JTextField jSortCodeTextField;
    private javax.swing.JButton jSphereVolumeButton;
    private javax.swing.JButton jSquareBasedPyramidVolumeButton;
    private javax.swing.JLabel jStatusAnimationLabel;
    private javax.swing.JLabel jStatusMessageLabel;
    private javax.swing.JPanel jStatusPanel;
    private javax.swing.JButton jSummarySelectedAccBtn;
    private javax.swing.JTextArea jTransactionTextArea;
    private javax.swing.JLabel jTransactionsAccNumberLabel;
    private javax.swing.JTextField jTransactionsAccNumberTextField;
    private javax.swing.JTextField jTransactionsAmountTextField;
    private javax.swing.JLabel jTransactionsDOBLabel;
    private javax.swing.JTextField jTransactionsDOBTextField;
    private javax.swing.JLabel jTransactionsDepositAmountLabel;
    private javax.swing.JLabel jTransactionsFirstNameLabel;
    private javax.swing.JTextField jTransactionsFirstNameTextField;
    private javax.swing.JPanel jTransactionsPanel;
    private javax.swing.JLabel jTransactionsSortCodeLabel;
    private javax.swing.JTextField jTransactionsSortCodeTextField;
    private javax.swing.JLabel jTransactionsSurnameLabel;
    private javax.swing.JTextField jTransactionsSurnameTextField;
    private javax.swing.JButton jWithdrawBtn;
    // End of variables declaration//GEN-END:variables
}
